def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 35
    ndkVersion "25.1.8937393"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true
    }


    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.tangerine.employ"
        minSdkVersion 23
        targetSdkVersion 35
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
        manifestPlaceholders = [mapsApiKey: "$System.env.MAPS_API_KEY"]
        ndk.abiFilters 'armeabi-v7a','arm64-v8a','x86','x86_64'
    }

    flavorDimensions "app"
    signingConfigs {
        demo {
            keyAlias 'employ-dev'
            keyPassword 'employone'
            storeFile file('employ-demo.jks')
            storePassword 'employone'
        }
        production {
            keyAlias 'employ-one'
            keyPassword 'employone'
            storeFile file('employ-one.jks')
            storePassword 'employone'
        }
    }
    productFlavors {
        demo {
            dimension "app"
            applicationIdSuffix ".demo"
            manifestPlaceholders = [appName: "Demo"]
        }
        production {
            dimension "app"
            applicationIdSuffix ".one"
            manifestPlaceholders = [appName: "Employ"]
        }
    }

    buildTypes {
        release {
            productFlavors.demo.signingConfig signingConfigs.demo
            productFlavors.production.signingConfig signingConfigs.production
            minifyEnabled false
            shrinkResources false
        }
    }
    namespace 'com.tangerine.employ'
    lint {
        disable 'InvalidPackage'
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'com.android.support:multidex:1.0.3'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.window:window:1.0.0'
    implementation 'androidx.window:window-java:1.0.0'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
}